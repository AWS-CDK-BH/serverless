# Run all of the TypeScript tests

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Validate Python Patterns
      - name: Build/Synth Python Patterns
        run: |
          readarray -t patterns < <(jq -r '.[] | keys | .[]' info.json);
          for pattern in "${patterns[@]}"
            do
               cd $pattern/python;
               if test -f "requirements.txt"; then
                 python3 -m venv .env;
                 source .env/bin/activate;
                 pip3 install -r requirements.txt;
                 readarray -t stacks < <(cdk ls);
                 for stack in "${stacks[@]}"
                   do
                      echo "npx cdk synth $stack";
                      npx cdk synth "$stack";
                   done    
                 deactivate
               fi
               cd ../../;
            done

      # Validate TypeScript Patterns
      - name: Build/Test TypeScript Patterns
        run: |
          readarray -t arr < <(jq -r '.[] | keys | .[]' info.json);
          for i in "${arr[@]}"
            do
               cd $i/typescript;
               npm i;
               npm run build;
               npm run test;
               cd ../../;
            done
            
      
